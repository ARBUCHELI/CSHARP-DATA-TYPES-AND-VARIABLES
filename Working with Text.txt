# WORKING WITH TEXT
-------------------

* Introduction to Working with Text
-----------------------------------
Working with text is a fundamental part of writing programs. Whether it’s to provide instructions to a user, gathering data like a name or address, or writing a new form of poetry, text 
enables us to bring human language into computational form.

In this lesson, we’ll look at the two commonly used text data types in C#: char and string. By the end of this lesson, you will be able to manipulate textual data and write programs that 
take in user inputs and output customizable messages using variables, operators, and built-in methods.

Program.cs
----------
using System;

namespace MadTeaParty
{
  class Program
  {
    static void Main(string[] args)
    {
      string drink = "wine";
      string madTeaParty = $"\"Have some {drink},\" the March Hare said in an encouraging tone. \nAlice looked all round the table, but there was nothing on it but tea.\n\"I don't see any {drink},\" she remarked.\n\"There isn't any,\" said the March Hare.";

      int storyLength = madTeaParty.Length;
      string toFind = "March Hare";

      string findLowerCase = toFind.ToLower(); 
      int findMarchHare = madTeaParty.IndexOf(toFind);

      Console.WriteLine(madTeaParty.Substring(findMarchHare));
      Console.WriteLine($"This scene is {storyLength} long.\n");
      Console.WriteLine($"The term we're looking for is {toFind} and is located at index {findMarchHare}.");

    }
  }
}

==================================================================================================================================================================

* Building Strings
------------------
A string is a group of characters surrounded by quotation marks, like "https://codecademy.com" or "To be or not to be." A string is just a collection of a smaller data type, char, which 
is a single character like “a” or “?”.

To define a variable as a string, you write the data type, then the variable name. Then set it equal to the value, which is inside of quotation marks :

	string variableName = "puppy";
 
The variable is named variableName, it’s of type string, and its value is "puppy".

* Escape Character Sequences
----------------------------
What happens when you need to include quotes in a string? You can use an escape sequence. An escape sequence places a backslash (\) before the inner quotation marks, so the program 
doesn’t read them accidentally as the end of sequence.

	string withoutSlash = "Ifemelu said, "Hello!"";
 
	string withSlash = "Ifemelu said, \"Hello!\"";
 
We can use escape character sequences to create a newline. That means that when we print the string to the console, it will print that line below the rest. If printed on its own, it will 
create an empty line. To create a newline, use the character combination \n.

	string newLine = "Ifemelu walked \n to the park.";
 
For more on escape sequences, check out Microsoft’s Documentation.

Program.cs
----------
using System;

namespace PrideAndPrejudice
{
  class Program
  {
    static void Main(string[] args)
    {
      // First string variable
      string firstSentence = "It is a truth universally acknowledged, that a single man in possession of a good fortune, must be in want of a wife.";
      // Second string variable
      string firstSpeech = "\"My dear Mr. Bennet,\" said his lady to him one day, \"have you heard that Netherfield Park is let at last?\"";

      // Print variable and newline
      Console.WriteLine(firstSentence);
      Console.WriteLine("\n");
      Console.WriteLine(firstSpeech);
    }
  }
}

==================================================================================================================================================================


































